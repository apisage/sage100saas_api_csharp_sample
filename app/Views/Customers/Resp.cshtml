
@{
    ViewData["Title"] = "Resp";
}

@using System.Text.RegularExpressions;
@using Microsoft.AspNetCore.Html;
@using System.Web;

<table id="tabClients" name="tabClients" width="100%" class="response">
    <caption class="pagination" align="bottom" id="caption">
        @{
            var clients = ViewBag.Clients;

            var patternSearchTerm = (string.IsNullOrEmpty(ViewBag.SearchTerm)) ? null : "(?<searchTerm>" + ViewBag.SearchTerm + ")";
            var number = clients["@odata.count"] ?? "0";
            var currentPage = (int)(ViewBag.CurrentPage / 10) + 1;
            var noPages = (int)(number / 10);
            // Cas où il y a 0, 10, 20... résultats.
            noPages = ((int)number % 10 == 0) ? noPages : noPages + 1;
            var secondary = string.Empty;
            for (int page = 1; page <= noPages; page++)
            {
                secondary = (page != currentPage) ? "secondary" : "";
                @:<button class="button @secondary" name="skip" value="@Html.Raw(((page-1) * 10).ToString())"> @Html.Raw(page.ToString()) </button>
            }
        }
        <div class="nbresult">
            @number clients trouvés
        </div>
        <span class="button secondary" onclick="javascript:showHideOdata()">OData</span>
        <a class="button secondary" href="https://developer.sage.com/api/100/fr/saas/concepts/odatapaginate/" target="targetconcept">Pagination</a>

    </caption>

    @if (number > 0)
    {
        <tr class="rowheader">
            <th>Numéro</th>
            <th>Intitulé </th>
            <th>Adresse</th>
            <th>Téléphone</th>
            <th></th>
        </tr>
        @if (clients != null)
        {
            var cpt = 0;
            var row = "";
            HtmlString numero;
            HtmlString intitule;
            @foreach (var client in clients["value"])
            {
                cpt++;
                row = (cpt % 2 == 0) ? "row" : "row-even";
                // on ajoute un fond de couleur partout où le numéro ou intitule contient le terme de recherche
                numero = new HtmlString(HttpUtility.HtmlEncode(client["numero"]));
                intitule = new HtmlString(HttpUtility.HtmlEncode(client["intitule"]));
                if (patternSearchTerm != null)
                {
                    numero = new HtmlString(Regex.Replace(numero.ToString(), patternSearchTerm, "<font class=tagSearch>${searchTerm}</font>", RegexOptions.IgnoreCase));
                    intitule = new HtmlString(Regex.Replace(intitule.ToString(), patternSearchTerm, "<font class=tagSearch>${searchTerm}</font>", RegexOptions.IgnoreCase));
                }
                <tr class="@row">
                    <td> <a class="addspinner" href="Customers/show/@client["id"]">@numero </a> </td>
                    <td class="field"> @intitule </td>
                    <td class="field">  @client["adresse"]["adresse"] @client["adresse"]["codePostal"] @client["adresse"]["ville"] </td>
                    <td class="field">  @client["telecom"]["telephone"]</td>
                    <td> <a class="addspinner" href="Customers/show/@client["id"]"> Détails </a> </td>
                </tr>
            }
        }
    }
</table>

<div id="odatainfos" style="display:none" class="odatainfos">
    <table>
        @foreach (var option in ViewBag.options)
        {
            <tr>
                <td><b>@option.Key</b></td>
                <td class="odatainfosValue">: @option.Value </td>
            </tr>
        }
    </table>
</div>
