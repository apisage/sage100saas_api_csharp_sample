@*****************************[STYLES SPECIFIQUES A CETTE PAGE]**********************************************************@
<style>
    .loadCompanies {
        position: absolute;
        z-index: 99999;
        margin: auto;
        top: 0px;
        bottom: 200px;
        left: 0;
        right: 0;
        width: 400px;
        height: 100px;
        text-align: center;
        font-size: xx-large;
    }

    SELECT.selectCompanies, INPUT.selectCompanies {
        border: 1px solid #668592;
        background: #fff;
        padding: 4px;
        width: 250px;
        font-size: 16px;
        text-overflow: ellipsis;
        line-height: inherit;
        position: relative;
        overflow: hidden;
        flex: 1 1;
        border-radius: 0;
        resize: vertical;
    }


    td.selectCompaniesTitle {
        width: 135px;
    }

</style>

@using Microsoft.AspNetCore.Http
@using System.IO;


<script>affectContextError("@ViewBag.codeMessage")</script>


<div class="form">
    @{
        string urlSite = @Context.Request.Scheme + "://" + Context.Request.Host;
        bool ConfigFileKo = Startup.GetPathOfConfigFile().Equals(string.Empty);
    }

    @*****************************[CONTEXTE CLIENT_APPLICATION.JSON ABSENT]*******************************************************************
        Le fichier client_application.json n'est pas encore configuré, on explique ce qu'il faut faire*@
    @if (ConfigFileKo)
    {
        bool Refresh = Convert.ToBoolean(@Context.Request.Query["refresh"]);
        /* Si on a cliqué sur le bouton actualiser et que le fichier client_application.json n'est toujours pas présent, message avertissement*/
        if (Refresh)
        {
            <p class="field__error">
                Le fichier <code>client_application.json</code> n'est toujours pas présent dans <code>@Directory.GetCurrentDirectory()</code>
            </p>
        }

        <div class="titlepage">
            <h2>Le fichier client_application.json n'a pas été trouvé</h2>
        </div>
        <p>
            Avant d'utiliser cet exemple vous devez créer une application via <b>Sage App Registry</b> puis qualifier un <b>fichier de configuration</b> notamment en mentionnant les identifiants générés lors de la création de l'application.
        </p>
        <p>
            Suivez les étapes suivantes pour que l'exemple puisse être utilisé :
            <ul>
                <li class="step">
                    Dupliquez le fichier <b>app/client_application.template.json</b> et renommez la copie en <b>app/client_application.json</b>.
                </li>
                <li class="step">
                    Si vous n'avez pas encore créé une application via <b>Sage App Registry</b> et si n'avez donc pas encore vos identifiants <b>Client ID</b> et <b>Client Secret</b> :
                    rendez-vous sur
                    <a href="https://developer.sage.com/api/100/fr/saas/quickstart/appregistrybeta/" target="_blank">Sage App Registry</a> :
                    <ul>
                        <li>Créez votre compte ou connectez-vous.</li>
                        <li>
                            Créez ensuite une nouvelle app dans <b>Sage App Registry</b> avec les paramètres suivants :
                            <ul>
                                <li><span style="width:100px;display:inline-block"><b>Type client</b></span> : <code>Web Application</code></li>
                                <li><span style="width:100px;display:inline-block"><b>Callback URL</b></span> : <code>@urlSite/auth/callback</code></li>
                                <li><span style="width:100px;display:inline-block"><b>Logout URL</b></span> : <code>@urlSite</code></li>
                                <li><span style="width:100px;display:inline-block"><b>Add API</b></span> : <code>Sage 100 Saas</code></li>
                            </ul>
                        </li>
                        <li>
                            Cliquez sur <b>Save</b> pour générer les identifiants.
                        </li>
                    </ul>
                </li>
                <li class="step">
                    Copiez / collez les valeurs des identifiants générés <b>Client ID</b> et <b>Client Secret</b> dans les champs <b>client_id</b> et <b>client_secret</b> du fichier <b>client_application.json</b>.
                </li>
                <li class="step">
                    Cliquez sur le bouton <b>Actualiser</b> en haut de l'écran.<br />
                    Si le fichier<b> app/client_application.json</b> est présent, un bouton <b>Connexion</b> sera proposé.<br />
                    Vous devrez alors quitter l'application puis la relancer pour prendre en compte les identifiants renseignés.
                </li>
            </ul>
        </p>
        <p>
            Cliquez sur le bouton <b>Aide</b> pour accéder aux explications de cette application depuis le portail de l'API.
        </p>
    }
    @*****************************[CONTEXTE NON CONNECTE]*******************************************************************
        Le fichier client_application.json est présent et on ne s'est pas encore connecté*@
    else if (!User.Identity.IsAuthenticated)
    {
        /* Si on après avoir qualifié client_application.json on n'a pas relancé l'app on avertit*/
        if (app.Settings.ApplicationSettings.ClientId == "default")
        {
            <p class="field__error">
                Dernière étape de la configuration :<br /><br />
                Avant de pouvoir vous connecter, vous devez préalablement fermer puis relancer cette application pour que les valeurs qualifiées dans <code>client_application.json</code> soient prises en compte.
            </p>
        }
        <div class="titlepage">
            <h2>Bienvenue dans cet exemple</h2>
        </div>
        <span class="fieldBloc" style="display:inline-block;width:100%">Présentation</span>

        <blockquote>
            <p>
                Cette application est proposée à titre d'exemple pour vous aider à utiliser l'API et met en avant quatre concepts principaux :
                <ol class="steps">
                    <li class="step"> <b>Authentification</b><br />Via les boutons <b>Connexion</b> / <b>Déconnexion</b>, la gestion de l'authentification Oauth2 pour obtenir un token d'accès à l'API.</li>
                    <li class="step"> <b>Odata et API</b><br />Via l'onglet <b>Requête</b>, une interface afin de vous initier à l'écriture des requêtes OData pour interroger l'API.</li>
                    <li class="step"> <b>Pagination</b><br />Via l'onglet <b>Clients</b>, recherche, liste avec pagination, consultation, modification, création de tiers clients, lecture asynchrone des soldes comptables.</li>
                    <li class="step"> <b>Ouverture</b><br />Via l'onglet <b>Import</b>, un exemple d'import de fichiers texte d'écritures comptables.</li>
                </ol>
            </p>
        </blockquote>
        <span class="fieldBloc" style="display:inline-block;width:100%">Instructions</span>
        <blockquote>
            <p>
                Vous devez au préalable cliquer sur le bouton <b>Connexion</b> puis vous authentifier.
            </p>
            <p>
                Après vérification des droits, les onglets <b>Requêtes</b>, <b>Clients</b>, <b>Import</b> seront accessibles et le bouton <b>Connexion</b> sera remplacé par un bouton <b>Déconnexion</b>.
            </p>
            <p>
                Cliquez sur le bouton <b>Aide</b> pour accéder aux explications de cette application depuis le portail de l'API.
            </p>
        </blockquote>
    }
    @*****************************[CONTEXTE CONNECTE MAIS ON N'A PAS ENCORE CHARGE LA LISTE DES SOCIETES]
        On provoque réappel de la même page mais avec le flag lodCompanies à true pour afficher un spinner d'attente sinon on a un écran blanc le temps que la liste des sociétés soit trouvée*@
    else if (ViewBag.Companies == null)
    {
        <div class="loadCompanies">Contrôle des autorisations d'accès aux sociétés</div>
        <script>spinner(); setTimeout(function () { location.href = location.href + "?loadCompanies=true" }, 100);</script>
    }

    @*****************************[CONTEXTE CONNECTE MAIS AUCUNE SOCIETE]*******************************************************************
        On est connecté mais la société n'est pas trouvée.*@
    else if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
    {
        <p class="field__error">
            <b>Erreur d'accès à la société mentionnée dans le fichier client_application.json</b><br /><br />
            @ViewBag.ErrorMessage
        </p>
    }
    @*****************************[CONTEXTE CONNECTE ET SOCIETES DISPONIBLES]*******************************************************************
        On est connecté et la société est bien trouvée*@
    else
    {
        <form id="form" action="/Home/changecompany" method="post" spellcheck="false" autocomplete="off">
            <input type="hidden" id="companyid" name="companyid" />
            <input type="hidden" id="companyname" name="companyname" />

            <div class="titlepage">
                @if (ViewBag.Companies.Count == 0)
                {
                    <h2>@Resource.NOCOMPANIES</h2>
                }
                else
                {
                    <h2>L'application est actuellement connectée à la société : <b> @app.Settings.ApplicationSettings.CompanyName</b></h2>
                }
            </div>
            <div class="field_header">
                <span class="fieldBloc" style="display:inline-block;width:100%">Choix Société</span>
                <blockquote>
                    <table>
                        <tr>
                            @if (ViewBag.Companies.Count != 0)
                            {
                                <td style="padding-right:5px">Changer de société</td>
                                <td>
                                    @if (ViewBag.Companies.Count > 1)
                                    {
                                        <select class="selectCompanies nofocus" id="companies" name="companies" onchange="changeCompany();">
                                            @foreach (var companies in ViewBag.Companies)
                                            {
                                                <option selected="@(app.Settings.ApplicationSettings.CompanyId == (String)companies.id)" value="@companies.id">@companies.name</option>
                                            }
                                        </select>

                                    }
                                    else
                                    {
                                        <input class="selectCompanies field__input" value="@ViewBag.Companies[0].name" readonly="readonly" />
                                    }
                                </td>
                                <td style="width:5%"></td>
                            }

                            <td colspan="2">
                                <input class="nofocus" type="checkbox" id="clearcache" name="clearcache" onchange="changeCompany();">
                                <label for="clearcache">Réactualiser la liste des sociétés</label>
                            </td>
                            <td style="width:5%"></td>
                            <td><a class="button" href="@app.Settings.ApplicationSettings.UrlManagement" target="_blank">Bureau</a></td>
                        </tr>
                    </table>
                </blockquote>

                <span class="fieldBloc" style="display:inline-block;width:100%">Informations</span>
                <blockquote>
                    <p>
                        Cliquez sur les onglets suivants pour découvrir les trois exemples :
                        <ol class="steps">
                            <li class="step"> <b>Requêtes</b> : Une interface afin de vous initier à l'écriture des requêtes OData pour interroger l'API.</li>
                            <li class="step"> <b>Clients</b> :  Recherche, liste avec pagination, consultation, modification, création de tiers clients.</li>
                            <li class="step"> <b>Import</b> : Un exemple d'import d'un fichier d'écritures de vente.</li>
                        </ol>
                    </p>
                    <br>

                    <p>
                        Cliquez sur le bouton <b>Déconnexion</b> pour révoquer le token d'authentification et vous déconnecter ainsi de l'API.
                    </p>
                    <p>
                        Cliquez sur le bouton <b>Aide</b> pour accéder aux explications de cette application depuis le portail de l'API.
                    </p>
                </blockquote>
            </div>
        </form>
    }
</div>

@*****************************[SCRIPTS JAVASCRIPT EXECUTES PAR LE NAVIGATEUR]**********************************************************@
<script type="text/javascript">
    var changeCompany = function () {
        var listCompanies = document.getElementById("companies");
        if (listCompanies) {
            document.getElementById("companyid").value = listCompanies.item(listCompanies.selectedIndex).value;
            document.getElementById("companyname").value = listCompanies.item(listCompanies.selectedIndex).innerText;
        }
        document.getElementById("form").submit();
        spinner();
    }
</script>
